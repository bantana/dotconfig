# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
snippet ccls ".ccls file" b
clang
%c -std=c11
%cpp -std=c++2a
%h %hpp --include=Global.h
-Iinc
-DMACRO
endsnippet
snippet stupidline "space line" b
printf("----I'm stupid line----\n");
${1}
endsnippet
snippet stdef "typedef struct {..} TypeName;" b
typedef struct
{
	${2:char*} ${3:name};
} ${1:TypeName};
${0}
endsnippet
snippet enum "enum" b
enum ${1:name} {
	${2:constant},
};
${0}
endsnippet
